<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout - Sidedish Foods</title>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Montserrat:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="style.css">
    <style>
       .checkout-section {
            max-width: 800px;
            margin: 0 auto;
        }
        .order-summary h3, .delivery-details h3, .payment-method h3 {
            font-family: 'Playfair Display', serif;
            color: #4a2c2a;
        }
        .payment-method div {
            margin-left: 20px;
        }
        .place-order-btn {
            padding: 15px;
            font-size: 18px;
        }
        .error-message {
            color: red;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
        .error-message {
            color: red;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="header">
        <img src="assets/logo.jpg" alt="Sidedish Foods Logo">
        <nav>
            <a href="index.htm">Home</a>
            <a href="menu.htm">Menu</a>
            <a href="about.htm">About</a>
            <a href="contact.htm">Contact</a>
            <a href="order-list.htm">The Order List</a>
            <a href="admin-dashboard.htm">Admin Dashboard</a>
        </nav>
    </div>
    <div class="section checkout-section">
        <h2>Checkout</h2>
        <div class="card order-summary">
            <h3>Order Summary</h3>
            <div id="order-items"></div>
            <p>Food Total: <span id="order-total">0</span> NGN</p>
            <p>Delivery Fee: <span id="delivery-fee">Select delivery location</span></p>
            <p class="error-message" id="cart-error">Your cart is empty. Please add items to your cart.</p>
        </div>
        <div class="card delivery-details">
            <h3>Delivery Details</h3>
            <label for="address">Delivery Address:</label>
            <input type="text" id="address" placeholder="Enter your address" required>
            <p class="error-message" id="address-error">Please enter a valid address.</p>
            <label for="city">State:</label>
            <select id="city" onchange="updateDeliveryFee()" required>
                <option value="">Select State</option>
                <option value="Kano">Kano</option>
                <option value="Abia">Abia</option>
                <option value="Adamawa">Adamawa</option>
                <option value="Akwa Ibom">Akwa Ibom</option>
                <option value="Anambra">Anambra</option>
                <option value="Bauchi">Bauchi</option>
                <option value="Bayelsa">Bayelsa</option>
                <option value="Benue">Benue</option>
                <option value="Borno">Borno</option>
                <option value="Cross River">Cross River</option>
                <option value="Delta">Delta</option>
                <option value="Ebonyi">Ebonyi</option>
                <option value="Edo">Edo</option>
                <option value="Ekiti">Ekiti</option>
                <option value="Enugu">Enugu</option>
                <option value="Gombe">Gombe</option>
                <option value="Imo">Imo</option>
                <option value="Jigawa">Jigawa</option>
                <option value="Kaduna">Kaduna</option>
                <option value="Katsina">Katsina</option>
                <option value="Kebbi">Kebbi</option>
                <option value="Kogi">Kogi</option>
                <option value="Kwara">Kwara</option>
                <option value="Lagos">Lagos</option>
                <option value="Nasarawa">Nasarawa</option>
                <option value="Niger">Niger</option>
                <option value="Ogun">Ogun</option>
                <option value="Ondo">Ondo</option>
                <option value="Osun">Osun</option>
                <option value="Oyo">Oyo</option>
                <option value="Plateau">Plateau</option>
                <option value="Rivers">Rivers</option>
                <option value="Sokoto">Sokoto</option>
                <option value="Taraba">Taraba</option>
                <option value="Yobe">Yobe</option>
                <option value="Zamfara">Zamfara</option>
                <option value="FCT">FCT (Abuja)</option>
            </select>
            <p class="error-message" id="city-error">Please select a state.</p>
            <p style="font-size: 12px; color: #666;">*Orders under 10,000 NGN are only available for delivery in Kano.</p>
            <label>Delivery Option:</label>
            <input type="radio" name="delivery-option" value="delivery" checked onchange="updateDeliveryFee()"> Delivery
            <input type="radio" name="delivery-option" value="pickup" onchange="updateDeliveryFee()"> In-Restaurant Pickup
        </div>
        <div class="card payment-method">
            <h3>Payment Method</h3>
            <div id="payment-options">
                <input type="radio" name="payment" value="bank-transfer" onclick="showPaymentDetails('bank-transfer')"> Bank Transfer<br>
                <div id="bank-transfer-details" style="display: none;">
                    <p>Account Name: Aisha Ahmad Abdullahi</p>
                    <p>Account Number: 7019631217</p>
                    <p>Bank: Opay</p>
                </div>
                <input type="radio" name="payment" value="cash-on-delivery" id="cash-on-delivery" onclick="showPaymentDetails('cash-on-delivery')"> Cash on Delivery (Kano only)<br>
                <input type="radio" name="payment" value="card-payment" id="card-payment" onclick="showPaymentDetails('card-payment')"> Card Payment (In-restaurant pickup only)
            </div>
            <p class="error-message" id="payment-error">Please select a payment method.</p>
        </div>
        <button class="btn place-order-btn" onclick="placeOrder()">Place Order</button>
    </div>
    <div class="footer">
        <p>Address: 479 Shehu Kazaura Rd, Hotoro, Kano</p>
        <p>Contact: 07019631217, 08054915919</p>
        <p>Instagram: <a href="https://instagram.com/sidedish_foods" target="_blank">@sidedish_foods</a></p>
    </div>
    <script src="script.js"></script>
    <script>
        const BASE_URL = 'https://sidedish-backend.onrender.com';

        const allowedOrigins = ['https://your-frontend.vercel.app', 'http://localhost:3000'];
        app.use(cors({
            origin: allowedOrigins
        }));

        window.onload = function() {
            updateCheckoutSummary();
            updateDeliveryFee();
        };

        function updateDeliveryFee() {
            const city = document.getElementById('city').value;
            const deliveryOption = document.querySelector('input[name="delivery-option"]:checked').value;
            const deliveryFeeElement = document.getElementById('delivery-fee');
            const cashOnDeliveryOption = document.getElementById('cash-on-delivery');
            const cardPaymentOption = document.getElementById('card-payment');

            if (deliveryOption === 'pickup') {
                deliveryFeeElement.textContent = '0 NGN (In-restaurant pickup)';
                cashOnDeliveryOption.disabled = true;
                cardPaymentOption.disabled = false;
            } else {
                if (total < 10000) {
                    if (city === 'Kano') {
                        deliveryFeeElement.textContent = '2,400 NGN';
                        cashOnDeliveryOption.disabled = false;
                        cardPaymentOption.disabled = true;
                    } else {
                        deliveryFeeElement.textContent = 'Not available (Order under 10,000 NGN)';
                        cashOnDeliveryOption.disabled = true;
                        cardPaymentOption.disabled = true;
                    }
                } else {
                    if (city === 'Kano') {
                        deliveryFeeElement.textContent = '2,400 NGN';
                        cashOnDeliveryOption.disabled = false;
                        cardPaymentOption.disabled = true;
                    } else {
                        deliveryFeeElement.textContent = 'To be paid upon arrival (varies by state)';
                        cashOnDeliveryOption.disabled = true;
                        cardPaymentOption.disabled = true;
                    }
                }
            }
        }

        function showPaymentDetails(method) {
            document.getElementById('bank-transfer-details').style.display = method === 'bank-transfer' ? 'block' : 'none';
        }

        async function placeOrder() {
            // Reset error messages
            document.getElementById('cart-error').style.display = 'none';
            document.getElementById('address-error').style.display = 'none';
            document.getElementById('city-error').style.display = 'none';
            document.getElementById('payment-error').style.display = 'none';

            // Get form values
            const city = document.getElementById('city').value;
            const address = document.getElementById('address').value.trim();
            const deliveryOption = document.querySelector('input[name="delivery-option"]:checked').value;
            const paymentMethod = document.querySelector('input[name="payment"]:checked')?.value;

            // Validation checks
            let hasError = false;

            if (cart.length === 0) {
                document.getElementById('cart-error').style.display = 'block';
                hasError = true;
            }

            if (!address) {
                document.getElementById('address-error').style.display = 'block';
                hasError = true;
            }

            if (!city) {
                document.getElementById('city-error').style.display = 'block';
                hasError = true;
            }

            if (!paymentMethod) {
                document.getElementById('payment-error').style.display = 'block';
                hasError = true;
            }

            if (total < 10000 && city !== 'Kano' && deliveryOption !== 'pickup') {
                alert('Orders under 10,000 NGN are only available for delivery in Kano.');
                hasError = true;
            }

            if (deliveryOption === 'pickup' && paymentMethod !== 'card-payment' && paymentMethod !== 'bank-transfer') {
                alert('For in-restaurant pickup, please select Card Payment or Bank Transfer.');
                hasError = true;
            }

            if (city === 'Kano' && deliveryOption !== 'pickup' && paymentMethod !== 'cash-on-delivery' && paymentMethod !== 'bank-transfer') {
                alert('For Kano deliveries, please select Cash on Delivery or Bank Transfer.');
                hasError = true;
            }

            if (city !== 'Kano' && deliveryOption !== 'pickup' && paymentMethod !== 'bank-transfer') {
                alert('For deliveries outside Kano, please select Bank Transfer.');
                hasError = true;
            }

            if (hasError) return;

            // Prepare order data
            const orderData = {
                items: cart,
                total: total,
                address: address,
                state: city,
                delivery_option: deliveryOption,
                payment_method: paymentMethod,
                payment_confirmed: false
            };

            // Log the order data for debugging
            console.log('Order Data:', orderData);

            try {
                const response = await fetch(`${BASE_URL}/api/orders`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(orderData)
                });

                console.log('Response Status:', response.status);
                if (response.ok) {
                    console.log('Order placed successfully!');
                    alert('Order placed successfully! You can view your order in the dashboard.');
                    localStorage.removeItem('cart');
                    localStorage.removeItem('total');
                    cart = [];
                    total = 0;
                    window.location.href = 'index.htm';
                } else {
                    const error = await response.json();
                    console.error('Error Response:', error);
                    console.error('Error placing order:', error);
                    alert('Failed to place order: ' + (error.message || 'Unknown error. Please try again.'));
                }
            } catch (error) {
                console.error('Network Error:', error.message);
                console.error('Error details:', error.message, error.stack);
                alert('An error occurred while placing the order: ' + error.message + '. Please check your internet connection and try again.');
            }
        }
    </script>
</body>
</html>